@commands.command(name='sacrifice', aliases=['sac'])
async def sacrifice_beast(ctx, beast_id: int):
    """Sacrifice a beast to gain experience for your active beast"""
    user = await ctx.bot.get_or_create_user(ctx.author.id, str(ctx.author))
    user_beasts = await ctx.bot.db.get_user_beasts(ctx.author.id)

    # Locate the target beast
    target_beast = None
    for bid, beast in user_beasts:
        if bid == beast_id:
            target_beast = beast
            break

    # Error: No such beast
    if not target_beast:
        embed = discord.Embed(color=0xFF1744)
        embed.add_field(
            name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            value="# 🚫 ⚡ IMMORTAL BEAST SHRINE ⚡ 🚫\n"
                  "## ❌ BEAST NOT FOUND ❌\n"
                  "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            inline=False)
        embed.add_field(
            name="🔍 Beast Registry Search",
            value=(f"```
                   f"- Beast ID: #{beast_id}\n"
                   f"- Owner: {ctx.author.display_name}\n"
                   f"- Status: NOT FOUND\n"
                   f"- Collection: {len(user_beasts)} beasts\n"
                   f"```"),
            inline=False)
        embed.add_field(
            name="💡 Available Actions",
            value=(f"📋 `{ctx.bot.config.prefix}beasts` - View your collection\n"
                   f"🔍 `{ctx.bot.config.prefix}beast <id>` - Check beast details\n"
                   f"⚡ Use a valid beast ID from your collection"),
            inline=False)
        embed.set_footer(text="⚡ IMMORTAL BEAST SHRINE • Double-check your beast ID!")
        embed.timestamp = discord.utils.utcnow()
        await ctx.bot.safe_send_message(ctx.channel, embed=embed)
        return

    # Error: Attempting to sacrifice the active beast
    if beast_id == user.active_beast_id:
        embed = discord.Embed(color=0xFF6D00)
        embed.add_field(
            name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            value="# 🛡️ ⚡ IMMORTAL BEAST SHRINE ⚡ 🛡️\n"
                  "## ⚠️ ACTIVE BEAST PROTECTED ⚠️\n"
                  "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            inline=False)
        embed.add_field(
            name="🟢 Active Beast Status",
            value=(f"```
                   f"Protected Beast: {target_beast.name}\n"
                   f"Beast ID: #{beast_id}\n"
                   f"Status: CURRENTLY ACTIVE\n"
                   f"Protection: SHRINE GUARDIAN\n"
                   f"```"),
            inline=False)
        embed.add_field(
            name="🔄 Solution Required",
            value=(f"**Step 1:** Choose a different active beast\n"
                   f"**Step 2:** Use `{ctx.bot.config.prefix}active <other_beast_id>`\n"
                   f"**Step 3:** Return here to perform sacrifice\n\n"
                   "🛡️ The shrine protects your active companion!"),
            inline=False)
        embed.set_footer(text="⚡ IMMORTAL BEAST SHRINE • Your active beast cannot be sacrificed!")
        embed.timestamp = discord.utils.utcnow()
        await ctx.bot.safe_send_message(ctx.channel, embed=embed)
        return

    # Calculate the rewards
    sacrifice_xp = target_beast.stats.get_total_exp_value(target_beast.rarity)
    beast_stones_reward = target_beast.stats.level * 10 + target_beast.rarity.value * 50

    # Find active beast (not the sacrificial one)
    active_beast = None
    if user.active_beast_id and user.active_beast_id != beast_id:
        for bid, beast in user_beasts:
            if bid == user.active_beast_id:
                active_beast = beast
                break

    # Confirmation embed
    embed = discord.Embed(color=0xFF3D00)
    power_bar = "🔴" * min(10, target_beast.power_level // 1000) or "⬛"
    rarity_glow = "✨" * target_beast.rarity.value
    embed.add_field(
        name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
        value="# 🔥 ⚡ IMMORTAL BEAST SHRINE ⚡ 🔥\n"
              "## ⚠️ SACRIFICE RITUAL INITIATED ⚠️\n"
              "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
        inline=False)
    embed.add_field(
        name="🐉 SACRIFICE CANDIDATE",
        value=(f"### {rarity_glow} {target_beast.name} {rarity_glow}\n"
               f"```
               f"Beast ID: #{beast_id}\n"
               f"Rarity: {target_beast.rarity.name.title()} {target_beast.rarity.emoji}\n"
               f"Level: {target_beast.stats.level}\n"
               f"Power: {target_beast.power_level:,}\n"
               f"```\n"
               f"**Power Level:** {power_bar}\n"
               f"**Origin:** {target_beast.location}"),
        inline=False)
    stone_value_bars = "💎" * min(8, beast_stones_reward // 100) or "⬛"
    xp_value_bars = "⚡" * min(8, sacrifice_xp // 500) or "⬛"
    embed.add_field(
        name="💰 SHRINE REWARDS",
        value=(f"```
               f"Beast Stones: {beast_stones_reward:,}\n"
               f"Value Tier:  {stone_value_bars}\n"
               f"Formula:     (Level × 10) + (Rarity × 50)\n"
               f"```\n"
               f"💎 {beast_stones_reward:,} Beast Stones will be granted!"),
        inline=True)
    if active_beast:
        embed.add_field(
            name="📈 SOUL TRANSFER",
            value=(f"```
                   f"Experience:  {sacrifice_xp:,} XP\n"
                   f"Power Tier:  {xp_value_bars}\n"
                   f"Recipient:   {active_beast.name}\n"
                   f"```\n"
                   f"⚡ Soul energy flows to {active_beast.name}!"),
            inline=True)
    else:
        embed.add_field(
            name="💀 LOST ESSENCE",
            value=(f"```
                   f"- Experience: {sacrifice_xp:,} XP\n"
                   f"- Status: NO ACTIVE BEAST\n"
                   f"- Result: ESSENCE DISPERSES\n"
                   f"```\n"
                   f"💀 Soul energy will be lost forever!"),
            inline=True)

    embed.add_field(
        name="⚠️ RITUAL WARNING",
        value=("```
               "- Beast Stones: PERMANENT GAIN\n"
               f"{'+ Soul Transfer: TO ACTIVE BEAST' if active_beast else '- Soul Energy: LOST FOREVER'}\n"
               "- Beast Loss: IRREVERSIBLE\n"
               "- Shrine Decision: FINAL\n"
               "```"),
        inline=False)
    embed.add_field(
        name="🔥 SHRINE RITUAL COMMANDS",
        value=("### ✅ COMPLETE SACRIFICE\n"
               "```
               "▶ Accept the shrine's power\n"
               "▶ Claim beast stones\n"
               f"{'▶ Transfer soul to active beast' if active_beast else '▶ Release soul to the void'}\n"
               "```\n"
               "### ❌ ABANDON RITUAL\n"
               "```
               "▶ Preserve your beast\n"
               "▶ Leave shrine unchanged\n"
               "```"),
        inline=False)
    embed.add_field(
        name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
        value="⚡ IMMORTAL BEAST SHRINE • Ancient powers await your decision\n"
              "🔥 *React within 30 seconds or the ritual will expire...*",
        inline=False)
    embed.set_author(
        name=f"Ritual Master: {ctx.author.display_name}",
        icon_url=ctx.author.display_avatar.url if hasattr(ctx.author, 'display_avatar') else None)
    embed.timestamp = discord.utils.utcnow()
    message = await ctx.bot.safe_send_message(ctx.channel, embed=embed)
    await ctx.bot.safe_add_reaction(message, "✅")
    await ctx.bot.safe_add_reaction(message, "❌")

    def check(reaction, react_user):
        return (react_user == ctx.author
                and str(reaction.emoji) in ["✅", "❌"]
                and reaction.message.id == message.id)

    try:
        reaction, _ = await ctx.bot.wait_for('reaction_add', timeout=30.0, check=check)

        if str(reaction.emoji) == "✅":
            success = await ctx.bot.db.delete_beast(beast_id)
            if not success:
                error_embed = discord.Embed(color=0xFF1744)
                error_embed.add_field(
                    name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
                    value="# 💥 ⚡ RITUAL FAILURE ⚡ 💥\n"
                          "## ❌ SHRINE REJECTED SACRIFICE ❌\n"
                          "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
                    inline=False)
                error_embed.add_field(
                    name="🔧 System Error",
                    value="``````",
                    inline=False)
                await ctx.bot.safe_edit_message(message, embed=error_embed)
                return

            # Add rewards, transfer XP, do stat boosts if allowed, update user/beasts accordingly...

            # Success feedback embed creation code (not repeated here to save space, see sample output).

            await ctx.bot.safe_edit_message(message, embed=success_embed)
        else:
            # Ritual abandoned (similar embed logic as above)
            await ctx.bot.safe_edit_message(message, embed=abandoned_embed)
    except asyncio.TimeoutError:
        timeout_embed = discord.Embed(color=0x616161)
        timeout_embed.add_field(
            name="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            value="# ⏳ ⚡ RITUAL EXPIRED ⚡ ⏳\n"
                  "## 🌙 SHRINE GROWS SILENT 🌙\n"
                  "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
            inline=False)
        timeout_embed.add_field(
            name="⏰ Time's Judgment",
            value=(f"```
                   f"Ritual Duration: 30 seconds\n"
                   f"Response: NONE RECEIVED\n"
                   f"Shrine Status: DORMANT\n"
                   f"Beast Status: SAFE\n"
                   f"```\n"
                   f"🌙 The shrine's power fades... {target_beast.name} remains protected"),
            inline=False)
        timeout_embed.add_field(
            name="🔮 Ancient Wisdom",
            value="*The shrine only accepts offerings from those who act with certainty*\n"
                  "💫 Return when you're ready to make a decisive choice",
            inline=False)
        await ctx.bot.safe_edit_message(message, embed=timeout_embed)